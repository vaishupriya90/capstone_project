// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("backend.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PaintingId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaintingId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("backend.Models.Painting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Paintings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableQuantity = 10,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1552353617-3bfd679b3bdd?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8Ym9hdHxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=800&q=60",
                            Name = "The Lonely Boat",
                            Price = 200.0
                        },
                        new
                        {
                            Id = 2,
                            AvailableQuantity = 7,
                            Description = "Some Description",
                            Image = "https://media.istockphoto.com/photos/portrait-of-peacock-watercolor-picture-id872927220?b=1&k=20&m=872927220&s=170667a&w=0&h=vbRQncIMsgjELbxqhm6OrWUfVkV5iK47btDr0_T_ovs=",
                            Name = "Peacock",
                            Price = 99.0
                        },
                        new
                        {
                            Id = 3,
                            AvailableQuantity = 15,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1625723044792-44de16ccb4e9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDEzfGJvOGpRS1RhRTBZfHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=800&q=60",
                            Name = "Silhouette house",
                            Price = 120.0
                        },
                        new
                        {
                            Id = 4,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1588522943401-6ba285f692de?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDMwfGJvOGpRS1RhRTBZfHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=800&q=60",
                            Name = "Black bird perched on tree",
                            Price = 87.0
                        },
                        new
                        {
                            Id = 5,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1541961017774-22349e4a1262?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1058&q=80",
                            Name = "Abstarct art",
                            Price = 299.0
                        },
                        new
                        {
                            Id = 6,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1584285405429-136bf988919c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2073&q=80",
                            Name = "Arts & Culture",
                            Price = 87.0
                        },
                        new
                        {
                            Id = 7,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1578763460789-324a7fcc0ee2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1409&q=80",
                            Name = "Twin birds",
                            Price = 164.0
                        },
                        new
                        {
                            Id = 8,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://i.pinimg.com/474x/2b/17/2d/2b172d14b9352972de753e04b853bf9b.jpg",
                            Name = "WaterFall",
                            Price = 99.0
                        },
                        new
                        {
                            Id = 9,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://images.unsplash.com/photo-1588522943401-6ba285f692de?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDMwfGJvOGpRS1RhRTBZfHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=800&q=60",
                            Name = "Black bird perched on tree",
                            Price = 87.0
                        },
                        new
                        {
                            Id = 10,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://blogger.googleusercontent.com/img/a/AVvXsEgui3Zr0h5jHPi86tbI7mtTU8-NRuGjchaLyisjIEhWBAdB29fX-bOKOwJCIkotiMNdREYZDAhVxwFyqnSN3xy2PIJlqE_7_zjQjP7Z5WC6ndNwWLD8l45jGFb11CSIDTr2n251OREkSfgPXopiCK_e6wfDU45WwV29LC133uhrTi6WmNn6yL9v1OxQ=s320",
                            Name = "Red Umbrella",
                            Price = 120.0
                        },
                        new
                        {
                            Id = 11,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://www.artisticaly.com/assets/Easy-Acrylic-Paintings-Ideas-for-Beginners-32.jpg",
                            Name = "Sunset Swing",
                            Price = 225.0
                        },
                        new
                        {
                            Id = 12,
                            AvailableQuantity = 5,
                            Description = "Some Description",
                            Image = "https://www.artisticaly.com/assets/Easy-Acrylic-Paintings-Ideas-for-Beginners-14.jpg",
                            Name = "Aurora",
                            Price = 95.0
                        });
                });

            modelBuilder.Entity("backend.Models.OrderItem", b =>
                {
                    b.HasOne("backend.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Painting", "Painting")
                        .WithMany()
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Painting");
                });

            modelBuilder.Entity("backend.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
